# SPDX-FileCopyrightText: 2021 Markus Linnala <markus.linnala@cybercom.com>
#
# SPDX-License-Identifier: Apache-2.0

policy_module(local_user_u, 1.0.0)

## <desc>
## <p>
## Enable debug helpers
## </p>
## </desc>
gen_tunable(local_user_u_debug, false)

## <desc>
## <p>
## Allow to use journalctl
## </p>
## </desc>
gen_tunable(local_user_u_journalctl, true)

optional_policy(`

# TODO: optional_policy stuff missing?
require {
	# Should always use login_userdomain for all stuff allowed to all
	attribute login_userdomain;
	# type sysadm_t;
	# type staff_t;
	# Alway use login_userdomain instead
	# type user_t;
	# role user_r;
	role system_r;
}

### login
### start: Terminal (gui app)
# seems dbus_role stuff is totally missing, this breaks all kinds of stuff
# from: policy/modules/roles/unconfineduser.te
# dbus_role_template needs these fixes
# /usr/bin/dbus-broker-launch --scope user
require {
	attribute systemd_unit_file_type;
	type user_dbusd_t;
}
allow user_dbusd_t login_userdomain:system { reload status };
allow user_dbusd_t systemd_unit_file_type:service start;

### Allow: loginctl session-status <id>
require {
	type init_var_run_t;
}
allow login_userdomain init_var_run_t:service status;

### Allow: login/logout w/ my systemd_logind_var_run_t/systemd_unit_file_t fc
# systemctl --user daemon-reexec: does not still work, it does not start systemd user instance
require {
	attribute gkeyringd_domain;
	type gkeyringd_tmp_t;
	type gpg_t;
	type gpg_agent_t;
	type gpg_agent_tmp_t;
	type gpg_secret_t;
	type init_t;
	type pulseaudio_t;
	type pulseaudio_var_lib_t;
	type system_dbusd_var_run_t;
	type systemd_logind_t;
	type systemd_logind_var_run_t;
	type systemd_unit_file_t;
	type unconfined_service_t; # /usr/libexec/uresourced
	type user_dbusd_t;
	type xdm_t;
}

### /run/user/<uid>/bus
manage_sock_files_pattern({ login_userdomain systemd_logind_t }, user_tmp_t, system_dbusd_var_run_t)

### /run/user/<uid>/gnupg
userdom_user_tmp_filetrans({ gpg_t login_userdomain systemd_logind_t xdm_t }, gpg_agent_tmp_t, dir, "gnupg")
manage_dirs_pattern({ gpg_t login_userdomain systemd_logind_t xdm_t }, user_tmp_t, gpg_agent_tmp_t)
# AVC avc:  denied  { unlink } for pid=201566 comm="systemd-user-ru" name="S.scdaemon" dev="tmpfs" ino=246 scontext=system_u:system_r:systemd_logind_t:s0 tcontext=user_u:object_r:gpg_agent_tmp_t:s0 tclass=sock_file permissive=0
# AVC avc:  denied  { unlink } for pid=201566 comm="systemd-user-ru" name="S.gpg-agent.ssh" dev="tmpfs" ino=245 scontext=system_u:system_r:systemd_logind_t:s0 tcontext=user_u:object_r:gpg_agent_tmp_t:s0 tclass=sock_file permissive=0
# AVC avc:  denied  { unlink } for pid=201566 comm="systemd-user-ru" name="S.gpg-agent.browser" dev="tmpfs" ino=244 scontext=system_u:system_r:systemd_logind_t:s0 tcontext=user_u:object_r:gpg_agent_tmp_t:s0 tclass=sock_file permissive=0
# AVC avc:  denied  { unlink } for pid=201566 comm="systemd-user-ru" name="S.gpg-agent.extra" dev="tmpfs" ino=243 scontext=system_u:system_r:systemd_logind_t:s0 tcontext=user_u:object_r:gpg_agent_tmp_t:s0 tclass=sock_file permissive=0
# AVC avc:  denied  { unlink } for pid=201566 comm="systemd-user-ru" name="S.gpg-agent" dev="tmpfs" ino=242 scontext=system_u:system_r:systemd_logind_t:s0 tcontext=user_u:object_r:gpg_agent_tmp_t:s0 tclass=sock_file permissive=0
manage_sock_files_pattern({ gpg_t login_userdomain systemd_logind_t xdm_t }, user_tmp_t, gpg_agent_tmp_t)

### /run/user/<uid>/keyring
userdom_user_tmp_filetrans({ gkeyringd_domain login_userdomain systemd_logind_t }, gkeyringd_tmp_t, dir, "keyring")
manage_dirs_pattern({ gkeyringd_domain login_userdomain systemd_logind_t }, user_tmp_t, gkeyringd_tmp_t)

### /run/user/<uid>/pipewire-0.lock
# Note, pipewire components are unconfined / user_t as of F35
userdom_user_tmp_filetrans({ login_userdomain systemd_logind_t }, pulseaudio_var_lib_t, file, "pipewire-0.lock")
manage_files_pattern({ login_userdomain systemd_logind_t }, pulseaudio_var_lib_t, pulseaudio_var_lib_t)

### /run/user/<uid>/pulse
manage_dirs_pattern({ login_userdomain pulseaudio_t systemd_logind_t xdm_t }, user_tmp_t, pulseaudio_var_lib_t)
userdom_user_tmp_filetrans({ login_userdomain pulseaudio_t systemd_logind_t }, pulseaudio_var_lib_t, dir, "pulse")
# /run/user/<uid>/pulse/native: all these can create/remove it
# AVC avc:  denied  { write } for pid=5179 comm="gnome-shell" name="native" dev="tmpfs" ino=48 scontext=system_u:system_r:xdm_t:s0-s0:c0.c1023 tcontext=unconfined_u:object_r:pulseaudio_var_lib_t:s0 tclass=sock_file permissive=0
manage_sock_files_pattern({ login_userdomain pulseaudio_t systemd_logind_t xdm_t }, pulseaudio_var_lib_t, pulseaudio_var_lib_t)
allow pulseaudio_t login_userdomain:unix_stream_socket { read write };

# /run/user/<uid>/systemd
userdom_user_tmp_filetrans({ login_userdomain systemd_logind_t }, systemd_logind_var_run_t, dir, "systemd")

### /run/user/<uid>/systemd/notify
# AVC avc:  denied  { write } for pid=2054 comm="dbus-broker-lau" name="notify" dev="tmpfs" ino=40 scontext=user_u:user_r:user_dbusd_t:s0-s0:c0.c1023 tcontext=user_u:object_r:systemd_logind_var_run_t:s0 tclass=sock_file permissive=0
allow user_dbusd_t systemd_logind_var_run_t:sock_file write;

### /run/user/<uid>/systemd/inaccessible: both of these can create/remove these files
# /run/user/<uid>/systemd/inaccessible/chr
manage_chr_files_pattern({ login_userdomain systemd_logind_t }, systemd_logind_var_run_t, systemd_logind_var_run_t)
# /run/user/<uid>/systemd/inaccessible/dir
manage_dirs_pattern({ login_userdomain systemd_logind_t }, systemd_logind_var_run_t, systemd_logind_var_run_t)
# /run/user/<uid>/systemd/inaccessible/fifo
manage_fifo_files_pattern({ login_userdomain systemd_logind_t }, systemd_logind_var_run_t, systemd_logind_var_run_t)
# /run/user/<uid>/systemd/inaccessible/reg
manage_files_pattern({ login_userdomain systemd_logind_t }, systemd_logind_var_run_t, systemd_logind_var_run_t)
# /run/user/<uid>/systemd/inaccessible/sock
manage_sock_files_pattern({ login_userdomain systemd_logind_t }, systemd_logind_var_run_t, systemd_logind_var_run_t)

# /run/user/<uid>/systemd/units
manage_dirs_pattern(systemd_logind_t, user_tmp_t, systemd_unit_file_t)
manage_files_pattern(systemd_logind_t, systemd_unit_file_t, systemd_unit_file_t)
manage_lnk_files_pattern(systemd_logind_t, systemd_unit_file_t, systemd_unit_file_t)

# /run/systemd/user
filetrans_pattern({ init_t systemd_logind_t unconfined_service_t }, init_var_run_t, systemd_unit_file_t, dir, "user")


### Allow some: ps: /proc/<pid>
require {
	type fprintd_t;
	type fwupd_cache_t;
	type kernel_t;
	type realmd_t;
	type systemd_hostnamed_t;
	type udev_t;
	type xdm_t;
}
dontaudit login_userdomain { fprintd_t udev_t xdm_t }:dir getattr;
allow login_userdomain fprintd_t:dir getattr;
allow login_userdomain fwupd_cache_t:dir { getattr open };
allow login_userdomain kernel_t:dir getattr;
allow login_userdomain realmd_t:dir getattr;
allow login_userdomain systemd_hostnamed_t:dir getattr;
allow login_userdomain udev_t:dir search;
allow login_userdomain xdm_t:dir search;

### start: Files (gui app)
# write transient directories/files and such
systemd_manage_unit_dirs(login_userdomain)
systemd_manage_all_unit_files(login_userdomain)

### start wireshark
# maybe not allow?
allow login_userdomain self:netlink_generic_socket create;

### start /usr/bin/sepolicy gui
# maybe not allow?
#allow login_userdomain semanage_t:dbus send_msg;
#seutil_dbus_chat_semanage(login_userdomain)

### run seinfo
# maybe not allow
#allow login_userdomain security_t:security read_policy;

### gnome-shell gsd-color
# why not? missing in roles/unprivuser.te
systemd_hwdb_mmap_config(login_userdomain)

### Allow gvfsd-fuse /home/user/.cache/gvfs
require {
	type cache_home_t;
}
allow login_userdomain cache_home_t:dir mounton;

### FIX: logout via gnome
# allow user_t mount_t:process { sigkill signal };
# bug: staff_t has this: selinux-policy a90f520338893e913011073937221c0ce3391347 BZ(1544272)
# reported as https://github.com/fedora-selinux/selinux-policy/issues/520
mount_sigkill(login_userdomain)

### LOCAL: Allow: to run ssh-agent with socket in /run/user/<uid>/ssh-agent.socket
# Moved file from original position
# Respective line at fc
require {
	attribute ssh_agent_type;
	type ssh_agent_tmp_t;
}
userdom_user_tmp_filetrans(ssh_agent_type, ssh_agent_tmp_t, sock_file, "ssh-agent.socket")

### grub2-set-bootflag
require {
	type boot_t;
}
allow login_userdomain boot_t:dir rw_dir_perms;
allow login_userdomain boot_t:file manage_file_perms;

### /usr/libexec/flatpak-system-helper via dbus
optional_policy(`
	require {
		type flatpak_helper_t;
	}
	allow login_userdomain flatpak_helper_t:dbus send_msg;
')

### flatpack files: /var/lib/flatpak
# bwrap
require {
	type nsfs_t;
	type user_dbusd_t;
	type var_lib_t;
}
allow login_userdomain nsfs_t:file getattr;
allow login_userdomain self:cap_userns setpcap;
allow login_userdomain var_lib_t:file map;
allow login_userdomain var_lib_t:lnk_file { getattr read };
allow user_dbusd_t var_lib_t:file { open read };
allow user_dbusd_t var_lib_t:lnk_file read;

### chrome uses this
# $ setsebool -P selinuxuser_udp_server 1

### gnome-software /var/cache/app-info
require {
	type fwupd_cache_t;
}
allow login_userdomain fwupd_cache_t:dir { read search };

### /usr/lib/polkit-1/polkit-agent-helper-1
require {
	type policykit_auth_t;
}
allow policykit_auth_t login_userdomain:unix_stream_socket { read write };

### /usr/lib/systemd/systemd-user-runtime-dir
require {
	type systemd_logind_t;
}
allow systemd_logind_t self:capability net_admin;

### Allow: systemd to kill processes
require {
	type mount_t;
}
allow login_userdomain mount_t:process signal;

### Allow: nice gnome-shell
allow login_userdomain self:capability sys_nice;

### Allow: gnome-terminal something
require {
	type kernel_t;
}
allow login_userdomain kernel_t:process getpgid;

### Deny: ls /run/systemd/inaccessible/
require {
	type init_var_run_t;
}
dontaudit login_userdomain init_var_run_t:blk_file getattr;
dontaudit login_userdomain init_var_run_t:chr_file getattr;

### dri_device_t, seems harmless?
### journalctl
### login etc
# prob should not be allowed
require {
	type dri_device_t;
	type journalctl_t;
	type utempter_t;
}
# some programs access: /dev/dri/card0
dontaudit journalctl_t dri_device_t:chr_file { read write };
dontaudit user_dbusd_t dri_device_t:chr_file { read write };
dontaudit utempter_t dri_device_t:chr_file { read write };

### login_userdomain:file read /proc/<pid>/mountinfo harmless?
### journalctl
### login etc
# dunno if this should be allowed
require {
	type journalctl_t;
	type ssh_t;
	type utempter_t;
}
dontaudit { journalctl_t ssh_t utempter_t } login_userdomain:file read;

### Deny: Xorg
dontaudit login_userdomain self:capability sys_admin;

### Deny: sudo
dontaudit login_userdomain self:capability sys_resource;

### Deny: write sudo ts file
require {
	type pam_var_run_t;
}
dontaudit login_userdomain pam_var_run_t:dir write;

### Deny: run audit2allow
require {
	type security_t;
}
dontaudit login_userdomain security_t:security read_policy;

### watch
require {
	type bin_t;
	type fonts_t;
	type fwupd_cache_t;
	type home_root_t;
	type lib_t;
	type locale_t;
	type root_t;
	type system_conf_t;
	type systemd_logind_var_run_t;
	type user_dbusd_t;
	type var_lib_t;
	type var_run_t;
}
allow user_dbusd_t var_lib_t:dir watch;
allow login_userdomain bin_t:dir watch;
allow login_userdomain fonts_t:dir watch;
allow login_userdomain fwupd_cache_t:dir watch;
allow login_userdomain home_root_t:dir watch;
allow login_userdomain lib_t:dir watch;
allow login_userdomain locale_t:dir watch;
allow login_userdomain root_t:dir watch;
allow login_userdomain system_conf_t:dir watch;
allow login_userdomain var_run_t:dir watch;

### What?
require {
	type init_var_run_t;
	type session_dbusd_tmp_t;
}
allow login_userdomain init_var_run_t:file read;
allow login_userdomain session_dbusd_tmp_t:sock_file write;

### Allow: use journalctl
require {
	type journalctl_t;
	type user_home_t;
	type user_home_dir_t;
}
# without this .lesshst etc has domain user_home_dir_t and that is just wrong
filetrans_pattern(journalctl_t, user_home_dir_t, user_home_t, file)
allow journalctl_t user_home_t:file { create open read rename setattr unlink write };


### login
require {
	type init_var_run_t;
}
allow login_userdomain init_var_run_t:file open;

### systemctl
require {
	type etc_t;
	type usr_t;
}
allow login_userdomain { etc_t usr_t }:service { reload start status stop };

### gpg?
require {
	type gpg_agent_t;
}
allow login_userdomain gpg_agent_t:process signull;

require {
	type alsa_var_lib_t;
	type init_var_run_t;
	type systemd_machined_var_run_t;
}
read_files_pattern(login_userdomain, alsa_var_lib_t, alsa_var_lib_t)
list_dirs_pattern(login_userdomain, init_var_run_t, systemd_machined_var_run_t)
watch_dirs_pattern(login_userdomain, init_var_run_t, systemd_machined_var_run_t)
watch_reads_dirs_pattern(login_userdomain, init_var_run_t, systemd_machined_var_run_t)

### google chrome
require {
	type session_dbusd_tmp_t;
}
# AVC avc:  denied  { read } for pid=12778 comm="pool-google-chr" name="dbus-N0kGENH6lI" dev="tmpfs" ino=68 scontext=user_u:user_r:user_t:s0-s0:c0.c255 tcontext=user_u:object_r:session_dbusd_tmp_t:s0 tclass=sock_file permissive=0
allow login_userdomain session_dbusd_tmp_t:sock_file read;

### google chrome
# AVC avc:  denied  { watch } for pid=12778 comm="chrome" path="/tmp" dev="tmpfs" ino=1 scontext=user_u:user_r:user_t:s0-s0:c0.c255 tcontext=system_u:object_r:tmp_t:s0 tclass=dir permissive=0
files_watch_generic_tmp_dirs(login_userdomain)

# AVC avc:  denied  { read } for pid=18891 comm="ThreadPoolForeg" name="NetworkManager" dev="tmpfs" ino=101 scontext=user_u:user_r:user_t:s0-s0:c0.c255 tcontext=system_u:object_r:NetworkManager_var_run_t:s0 tclass=dir permissive=0
# AVC avc:  denied  { watch } for pid=19769 comm="ThreadPoolForeg" path="/run/NetworkManager" dev="tmpfs" ino=101 scontext=user_u:user_r:user_t:s0-s0:c0.c255 tcontext=system_u:object_r:NetworkManager_var_run_t:s0 tclass=dir permissive=0
networkmanager_manage_pid_files(login_userdomain)

# AVC avc:  denied  { getattr } for  pid=24306 comm="find" path="/home/user/.local/share/containers/storage/overlay-images" dev="dm-2" ino=1049541 scontext=user_u:user_r:user_t:s0-s0:c0.c255 tcontext=user_u:object_r:container_ro_file_t:s0 tclass=dir permissive=0
# AVC avc:  denied  { getattr } for  pid=24306 comm="find" path="/home/user/.local/share/containers/storage/overlay" dev="dm-2" ino=1049537 scontext=user_u:user_r:user_t:s0-s0:c0.c255 tcontext=user_u:object_r:container_ro_file_t:s0 tclass=dir permissive=0
# AVC avc:  denied  { getattr } for  pid=24306 comm="find" path="/home/user/.local/share/containers/storage/overlay-layers" dev="dm-2" ino=1049545 scontext=user_u:user_r:user_t:s0-s0:c0.c255 tcontext=user_u:object_r:container_ro_file_t:s0 tclass=dir permissive=0
container_read_share_files(login_userdomain)

### Allow to watch /run/media
# AVC avc:  denied  { watch } for pid=306116 comm="nautilus" path="/run/media/user" dev="tmpfs" ino=25960 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:mnt_t:s0 tclass=dir permissive=0
# # AVC avc:  denied  { watch } for pid=306116 comm="gmain" path="/run/media/user" dev="tmpfs" ino=25960 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:mnt_t:s0 tclass=dir permissive=0
# AVC avc:  denied  { watch } for pid=306116 comm="gmain" path="/run/media" dev="tmpfs" ino=1944 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:mnt_t:s0 tclass=dir permissive=0
files_manage_mnt_dirs(login_userdomain)

### Allow setroubleshootd integration
# AVC avc:  denied  { send_msg } for  scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:system_r:setroubleshootd_t:s0 tclass=dbus permissive=0 exe="/usr/bin/dbus-broker" sauid=81 hostname=? addr=? terminal=?
# AVC avc:  denied  { send_msg } for  scontext=system_u:system_r:setroubleshootd_t:s0 tcontext=user_u:user_r:user_t:s0-s0:c0.c1023 tclass=dbus permissive=0 exe="/usr/bin/dbus-broker" sauid=81 hostname=? addr=? terminal=?
setroubleshoot_dbus_chat(login_userdomain)

# Allow user_u to read fwupd_cache_t
# AVC avc:  denied  { read } for  pid=332137 comm="gnome-software" name="copr:copr.fedorainfracloud.org:hdfssk:passwordsafe.xml" dev="dm-2" ino=33554598 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:fwupd_cache_t:s0 tclass=file permissive=0
# AVC avc:  denied  { read } for  pid=332137 comm="pool-org.gnome." name="copr:copr.fedorainfracloud.org:hdfssk:passwordsafe.xml" dev="dm-2" ino=33554598 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:fwupd_cache_t:s0 tclass=file permissive=0
fwupd_read_cache_files(login_userdomain)

### Allow to use /usr/bin/systemd-tmpfiles
# AVC avc:  denied  { execute } for  pid=77022 comm="zsh" name="systemd-tmpfiles" dev="dm-1" ino=33940978 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:systemd_tmpfiles_exec_t:s0 tclass=file permissive=0
# AVC avc:  denied  { read open } for  pid=77106 comm="zsh" path="/usr/bin/systemd-tmpfiles" dev="dm-1" ino=33940978 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:systemd_tmpfiles_exec_t:s0 tclass=file permissive=0
systemd_tmpfiles_exec(login_userdomain)

#============= user_t ==============
# AVC avc:  denied  { getattr } for  pid=77379 comm="systemd-xdg-aut" path="/usr/libexec/at-spi-bus-launcher" dev="dm-1" ino=50345674 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=system_u:object_r:gnome_atspi_exec_t:s0 tclass=file permissive=0
gnome_exec_atspi(login_userdomain)

#============= ssh_t ==============
require {
	attribute ssh_agent_type;
	type ssh_t;
	type ssh_exec_t;
	type user_ssh_agent_t;
}

### Allow: ssh -X / gnome-ssh-askpass
# AVC avc: denied { connectto } for pid=68612 comm="gnome-ssh-askpa" path="/run/user/1000/bus" scontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tcontext=user_u:user_r:user_dbusd_t:s0-s0:c0.c1023 tclass=unix_stream_socket permissive=0
dbus_session_client(user, ssh_t)
# AVC avc:  denied  { map } for pid=280133 comm=5B70616E676F5D204663496E6974 path="/home/user/.cache/fontconfig/beeeeb3dfe132a8a0633a017c99ce0c0-le64.cache-7" dev="dm-2" ino=946318 scontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tcontext=user_u:object_r:user_fonts_cache_t:s0 tclass=file permissive=0
require {
	type user_fonts_cache_t;
}
allow ssh_t user_fonts_cache_t:file map;
# AVC avc: denied { getattr } for pid=68612 comm="gnome-ssh-askpa" path="/var/lib/flatpak/exports/share/icons/hicolor/index.theme" dev="dm-0" ino=18172197 scontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tcontext=system_u:object_r:var_lib_t:s0 tclass=file permissive=0
# AVC avc: denied { read } for pid=68612 comm="gnome-ssh-askpa" name="icon-theme.cache" dev="dm-0" ino=21033510 scontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tcontext=system_u:object_r:var_lib_t:s0 tclass=file permissive=0
files_read_var_lib_files(ssh_t)
# AVC avc:  denied  { map } for  pid=70336 comm="gnome-ssh-askpa" path="/var/lib/flatpak/exports/share/icons/hicolor/icon-theme.cache" dev="dm-0" ino=21033510 scontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tcontext=system_u:object_r:var_lib_t:s0 tclass=file permissive=0
files_map_var_lib_files(ssh_t)
# AVC avc: denied { map } for pid=68612 comm="gnome-ssh-askpa" path="/home/user/.local/share/mime/mime.cache" dev="dm-2" ino=2625349 scontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tcontext=user_u:object_r:data_home_t:s0 tclass=file permissive=0
gnome_map_generic_data_home_files(ssh_t)

# AVC avc:  denied  { getattr associate } for  pid=1871 comm="Xorg" key=0  scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tclass=shm permissive=0
# AVC avc:  denied  { read write } for  pid=1871 comm="Xorg" key=0 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tclass=shm permissive=0
# AVC avc: denied { unix_read unix_write } for pid=1871 comm="Xorg" key=0 scontext=user_u:user_r:user_t:s0-s0:c0.c1023 tcontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tclass=shm permissive=0
allow login_userdomain ssh_t:shm rw_shm_perms;


### Allow: ssh-agent ssh ...
require {
	type bin_t;
}
# AVC avc:  denied  { execute } for  pid=78917 comm="ssh-agent" name="ssh" dev="dm-0" ino=30736058 scontext=user_u:user_r:user_ssh_agent_t:s0-s0:c0.c1023 tcontext=system_u:object_r:ssh_exec_t:s0 tclass=file permissive=0
read_lnk_files_pattern(ssh_agent_type, bin_t, ssh_exec_t)
domtrans_pattern(ssh_agent_type, ssh_exec_t, ssh_t)
type_transition user_ssh_agent_t ssh_exec_t:process ssh_t;

# AVC avc:  denied { send_msg } for  scontext=user_u:user_r:ssh_t:s0-s0:c0.c1023 tcontext=user_u:user_r:user_t:s0-s0:c0.c1023 tclass=dbus permissive=0
allow ssh_t login_userdomain:dbus send_msg;

')

### journalctl needs to access: /var/lib/systemd/catalog/database
optional_policy(`
tunable_policy(`local_user_u_journalctl',`
	require {
		attribute login_userdomain;
		type init_var_lib_t;
		type journalctl_t;
	}
	init_read_var_lib_files(login_userdomain)
	init_read_var_lib_files(journalctl_t)
	allow login_userdomain init_var_lib_t:dir { read search };
')
')

### Debug
optional_policy(`
tunable_policy(`local_user_u_debug',`
require {
	attribute login_userdomain;
	type journalctl_t;
	type syslogd_t;
}
allow syslogd_t self:cap_userns sys_ptrace;
allow login_userdomain journalctl_t:process ptrace;
allow login_userdomain self:cap_userns sys_ptrace;
')
')
